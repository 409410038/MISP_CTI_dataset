Buffer
Overflow
via
Environment
Variables
This
attack
pattern
involves
causing
a
buffer
overflow
through
manipulation
of
environment
variables
.
Once
the
attacker
finds
that
they
can
modify
an
environment
variable
,
they
may
try
to
overflow
associated
buffers
.
This
attack
leverages
implicit
trust
often
placed
in
environment
variables
.
The
application
uses
environment
variables
.
An
environment
variable
exposed
to
the
user
is
vulnerable
to
a
buffer
overflow
.
The
vulnerable
environment
variable
uses
untrusted
data
.
Tainted
data
used
in
the
environment
variables
is
not
properly
validated
.
For
instance
boundary
checking
is
not
done
before
copying
the
input
data
to
a
buffer
.
Do
not
expose
environment
variable
to
the
user
.
Do
not
use
untrusted
data
in
your
environment
variables
.
Use
a
language
or
compiler
that
performs
automatic
bounds
checking
There
are
tools
such
as
Sharefuzz
[
R.10.3
]
which
is
an
environment
variable
fuzzer
for
Unix
that
support
loading
a
shared
library
.
You
can
use
Sharefuzz
to
determine
if
you
are
exposing
an
environment
variable
vulnerable
to
buffer
overflow
.
