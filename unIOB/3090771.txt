import
sys
from
copy
import
copy
def
deobfuscate
(
filename
:
str
)
-
>
None
:
print
(
f
''
deobfuscates
privateloader
file
:
`
{
filename
}
`
``
)
with
open
(
filename
,
``
rb
''
)
as
f
:
data
=
bytearray
(
f.read
(
)
)
data2
=
copy
(
data
)
data2
=
replace_all
(
data
,
data2
,
0x00
,
0x80
)
data2
=
replace_all
(
data
,
data2
,
0x80
,
0x0a
)
data2
=
replace_all
(
data
,
data2
,
0x0a
,
0x01
)
data2
=
replace_all
(
data
,
data2
,
0x01
,
0x05
)
data2
=
replace_all
(
data
,
data2
,
0x05
,
0xde
)
data2
=
replace_all
(
data
,
data2
,
0xde
,
0xfd
)
data2
=
replace_all
(
data
,
data2
,
0xfd
,
0xff
)
data2
=
replace_all
(
data
,
data2
,
0xff
,
0x55
)
data2
=
replace_all
(
data
,
data2
,
0x55
,
0x00
)
unxored
=
bytearray
(
)
for
byte
in
data2
:
unxored.append
(
byte
^
0x9d
)
with
open
(
f
''
unxored-
{
filename
}
''
,
``
wb
''
)
as
f
:
f.write
(
unxored
[
4
:
]
)
print
(
f
''
unxored
privateloader
payload
dumped
in
`
unxored-
{
filename
}
`
file
''
)
def
replace_all
(
data
:
bytearray
,
data2
:
bytearray
,
x
:
int
,
y
:
int
)
-
>
bytearray
:
print
(
f
''
replace
all
{
hex
(
x
)
}
by
{
hex
(
y
)
}
''
)
for
index
,
byte
in
enumerate
(
copy
(
data
)
)
:
if
byte
==
x
:
data2
[
index
]
=
y
return
data2
if
__name__
==
``
__main__
''
:
deobfuscate
(
sys.argv
[
1
]
)
.
Python
script
to
deobfuscate
payload
dropped
by
PrivateLoader
.
