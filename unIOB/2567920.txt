The
adversary
utilizes
a
repeating
of
the
encoding
process
for
a
set
of
characters
(
that
is
,
character
encoding
a
character
encoding
of
a
character
)
to
obfuscate
the
payload
of
a
particular
request
.
This
may
allow
the
adversary
to
bypass
filters
that
attempt
to
detect
illegal
characters
or
strings
,
such
as
those
that
might
be
used
in
traversal
or
injection
attacks
.
Filters
may
be
able
to
catch
illegal
encoded
strings
,
but
may
not
catch
doubly
encoded
strings
.
For
example
,
a
dot
(
.
)
,
often
used
in
path
traversal
attacks
and
therefore
often
blocked
by
filters
,
could
be
URL
encoded
as
%
2E
.
However
,
many
filters
recognize
this
encoding
and
would
still
block
the
request
.
In
a
double
encoding
,
the
%
in
the
above
URL
encoding
would
be
encoded
again
as
%
25
,
resulting
in
%
252E
which
some
filters
might
not
catch
,
but
which
could
still
be
interpreted
as
a
dot
(
.
)
by
interpreters
on
the
target
.
The
target's
filters
must
fail
to
detect
that
a
character
has
been
doubly
encoded
but
its
interpreting
engine
must
still
be
able
to
convert
a
doubly
encoded
character
to
an
un-encoded
character
.
The
application
accepts
and
decodes
URL
string
request
.
The
application
performs
insufficient
filtering/canonicalization
on
the
URLs
.
