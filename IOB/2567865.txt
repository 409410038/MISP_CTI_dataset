Overflow	B-TTPs
Binary	I-TTPs
Resource	I-TTPs
File	I-TTPs
.	O
An	O
attack	O
of	O
this	O
type	O
exploits	O
a	O
buffer	B-Vulnerability
overflow	I-Vulnerability
vulnerability	I-Vulnerability
in	I-Vulnerability
the	I-Vulnerability
handling	I-Vulnerability
of	I-Vulnerability
binary	I-Vulnerability
resources	I-Vulnerability
.	O
Binary	O
resources	O
may	O
include	O
music	O
files	O
like	O
MP3	O
,	O
image	O
files	O
like	O
JPEG	O
files	O
,	O
and	O
any	O
other	O
binary	O
file	O
.	O
These	O
attacks	O
may	O
pass	B-TTPs
unnoticed	I-TTPs
to	I-TTPs
the	I-TTPs
client	I-TTPs
machine	I-TTPs
through	I-TTPs
normal	I-TTPs
usage	I-TTPs
of	I-TTPs
files	I-TTPs
,	O
such	O
as	O
a	O
browser	B-TTPs
loading	I-TTPs
a	I-TTPs
seemingly	I-TTPs
innocent	I-TTPs
JPEG	I-TTPs
file	I-TTPs
.	O
This	O
can	O
allow	B-Vulnerability
the	I-Vulnerability
attacker	I-Vulnerability
access	I-Vulnerability
to	I-Vulnerability
the	I-Vulnerability
execution	I-Vulnerability
stack	I-Vulnerability
and	I-Vulnerability
execute	I-Vulnerability
arbitrary	I-Vulnerability
code	I-Vulnerability
in	I-Vulnerability
the	I-Vulnerability
target	I-Vulnerability
process	I-Vulnerability
.	O
This	O
attack	O
pattern	O
is	O
a	O
variant	O
of	O
standard	O
buffer	B-TTPs
overflow	I-TTPs
attacks	I-TTPs
using	I-TTPs
an	I-TTPs
unexpected	I-TTPs
vector	I-TTPs
(	I-TTPs
binary	I-TTPs
files	I-TTPs
)	I-TTPs
to	O
wrap	O
its	O
attack	O
and	O
open	O
up	O
a	O
new	O
attack	O
vector	O
.	O
The	O
attacker	O
is	O
required	O
to	O
either	O
directly	B-TTPs
serve	I-TTPs
the	I-TTPs
binary	I-TTPs
content	I-TTPs
to	I-TTPs
the	I-TTPs
victim	I-TTPs
,	O
or	O
place	B-TTPs
it	I-TTPs
in	I-TTPs
a	I-TTPs
locale	I-TTPs
like	I-TTPs
a	I-TTPs
MP3	I-TTPs
sharing	I-TTPs
application	I-TTPs
,	I-TTPs
for	I-TTPs
the	I-TTPs
victim	I-TTPs
to	I-TTPs
download	I-TTPs
.	O
The	O
attacker	O
then	O
is	O
notified	O
upon	O
the	O
download	O
or	O
otherwise	O
locates	O
the	O
vulnerability	O
opened	O
up	O
by	O
the	O
buffer	B-TTPs
overflow	I-TTPs
.	O
Target	O
software	O
processes	O
binary	O
resource	O
files	O
.	O
Target	O
software	O
contains	O
a	O
buffer	B-Vulnerability
overflow	I-Vulnerability
vulnerability	I-Vulnerability
reachable	O
through	O
input	O
from	O
a	O
user-controllable	O
binary	O
resource	O
file	O
.	O
Perform	O
appropriate	O
bounds	O
checking	O
on	O
all	O
buffers	O
.	O
Design	O
:	O
Enforce	O
principle	O
of	O
least	O
privilege	O
Design	O
:	O
Static	O
code	O
analysis	O
Implementation	O
:	O
Execute	O
program	O
in	O
less	O
trusted	O
process	O
space	O
environment	O
,	O
do	O
not	O
allow	O
lower	O
integrity	O
processes	O
to	O
write	O
to	O
higher	O
integrity	O
processes	O
Implementation	O
:	O
Keep	O
software	O
patched	O
to	O
ensure	O
that	O
known	O
vulnerabilities	O
are	O
not	O
available	O
for	O
attackers	O
to	O
target	O
on	O
host	O
.	O