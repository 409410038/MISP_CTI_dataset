In	O
this	O
attack	O
pattern	O
,	O
the	O
adversary	O
leverages	O
fuzzing	B-TTPs
to	O
try	O
to	O
identify	B-TTPs
weaknesses	I-TTPs
in	I-TTPs
the	I-TTPs
system	I-TTPs
.	O
Fuzzing	O
is	O
a	O
software	O
security	O
and	O
functionality	O
testing	O
method	O
that	O
feeds	O
randomly	O
constructed	O
input	O
to	O
the	O
system	O
and	O
looks	O
for	O
an	O
indication	O
that	O
a	O
failure	O
in	O
response	O
to	O
that	O
input	O
has	O
occurred	O
.	O
Fuzzing	O
treats	O
the	O
system	O
as	O
a	O
black	O
box	O
and	O
is	O
totally	O
free	O
from	O
any	O
preconceptions	O
or	O
assumptions	O
about	O
the	O
system	O
.	O
Fuzzing	B-TTPs
can	O
help	O
an	O
attacker	O
discover	B-TTPs
certain	I-TTPs
assumptions	I-TTPs
made	I-TTPs
about	I-TTPs
user	I-TTPs
input	I-TTPs
in	I-TTPs
the	I-TTPs
system	I-TTPs
.	O
Fuzzing	B-TTPs
gives	O
an	O
attacker	O
a	O
quick	O
way	O
of	O
potentially	O
uncovering	O
some	O
of	O
these	O
assumptions	O
despite	O
not	O
necessarily	O
knowing	O
anything	O
about	O
the	O
internals	O
of	O
the	O
system	O
.	O
These	O
assumptions	O
can	O
then	O
be	O
turned	O
against	O
the	O
system	O
by	O
specially	B-TTPs
crafting	I-TTPs
user	I-TTPs
input	I-TTPs
that	O
may	O
allow	O
an	O
attacker	O
to	O
achieve	O
his	O
goals	O
.	O
Test	O
to	O
ensure	O
that	O
the	O
software	O
behaves	O
as	O
per	O
specification	O
and	O
that	O
there	O
are	O
no	O
unintended	O
side	O
effects	O
.	O
Ensure	O
that	O
no	O
assumptions	O
about	O
the	O
validity	O
of	O
data	O
are	O
made	O
.	O
Use	O
fuzz	O
testing	O
during	O
the	O
software	O
QA	O
process	O
to	O
uncover	O
any	O
surprises	O
,	O
uncover	O
any	O
assumptions	O
or	O
unexpected	O
behavior	O
.	O