To
help
protect
an
application
from
buffer
manipulation
attacks
,
a
number
of
potential
mitigations
can
be
leveraged
.
Before
starting
the
development
of
the
application
,
consider
using
a
code
language
(
e.g.
,
Java
)
or
compiler
that
limits
the
ability
of
developers
to
act
beyond
the
bounds
of
a
buffer
.
If
the
chosen
language
is
susceptible
to
buffer
related
issues
(
e.g.
,
C
)
then
consider
using
secure
functions
instead
of
those
vulnerable
to
buffer
manipulations
.
If
a
potentially
dangerous
function
must
be
used
,
make
sure
that
proper
boundary
checking
is
performed
.
Additionally
,
there
are
often
a
number
of
compiler-based
mechanisms
(
e.g.
,
StackGuard
,
ProPolice
and
the
Microsoft
Visual
Studio
/GS
flag
)
that
can
help
identify
and
protect
against
potential
buffer
issues
.
Finally
,
there
may
be
operating
system
level
preventative
functionality
that
can
be
applied
.
