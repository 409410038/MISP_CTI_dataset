Buffer	B-TTPs
Overflow	I-TTPs
via	I-TTPs
Parameter	I-TTPs
Expansion	I-TTPs
.	O
In	O
this	O
attack	O
,	O
the	O
target	O
software	O
is	O
given	O
input	O
that	O
the	O
attacker	O
knows	O
will	O
be	O
modified	B-TTPs
and	I-TTPs
expanded	I-TTPs
in	I-TTPs
size	I-TTPs
during	I-TTPs
processing	I-TTPs
.	O
This	O
attack	O
relies	O
on	O
the	O
target	O
software	O
failing	B-Vulnerability
to	I-Vulnerability
anticipate	I-Vulnerability
that	I-Vulnerability
the	I-Vulnerability
expanded	I-Vulnerability
data	I-Vulnerability
may	I-Vulnerability
exceed	I-Vulnerability
some	I-Vulnerability
internal	I-Vulnerability
limit	I-Vulnerability
,	O
thereby	O
creating	O
a	O
buffer	B-Vulnerability
overflow	I-Vulnerability
.	O
The	O
program	O
expands	O
one	O
of	O
the	O
parameters	O
passed	O
to	O
a	O
function	O
with	O
input	O
controlled	O
by	O
the	O
user	O
,	O
but	O
a	O
later	O
function	O
making	O
use	O
of	O
the	O
expanded	O
parameter	O
erroneously	O
considers	O
the	O
original	O
,	O
not	O
the	O
expanded	O
size	O
of	O
the	O
parameter	O
.	O
The	O
expanded	O
parameter	O
is	O
used	O
in	O
the	O
context	O
where	O
buffer	B-TTPs
overflow	I-TTPs
may	O
become	O
possible	O
due	O
to	O
the	O
incorrect	B-Vulnerability
understanding	I-Vulnerability
of	I-Vulnerability
the	I-Vulnerability
parameter	I-Vulnerability
size	I-Vulnerability
(	O
i.e	O
.	O
thinking	O
that	O
it	O
is	O
smaller	O
than	O
it	O
really	O
is	O
)	O
.	O
Ensure	O
that	O
when	O
parameter	O
expansion	O
happens	O
in	O
the	O
code	O
that	O
the	O
assumptions	O
used	O
to	O
determine	O
the	O
resulting	O
size	O
of	O
the	O
parameter	O
are	O
accurate	O
and	O
that	O
the	O
new	O
size	O
of	O
the	O
parameter	O
is	O
visible	O
to	O
the	O
whole	O
system	O