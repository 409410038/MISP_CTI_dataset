Manipulating	B-TTPs
User-Controlled	I-TTPs
Variables	I-TTPs
This	O
attack	O
targets	B-TTPs
user	I-TTPs
controlled	I-TTPs
variables	I-TTPs
(	I-TTPs
DEBUG=1	I-TTPs
","	I-TTPs
PHP	I-TTPs
Globals	I-TTPs
","	O
and	O
So	O
Forth	O
)	O
.	O
An	O
attacker	O
can	O
override	B-TTPs
environment	I-TTPs
variables	I-TTPs
leveraging	I-TTPs
user-supplied	I-TTPs
","	I-TTPs
untrusted	I-TTPs
query	I-TTPs
variables	I-TTPs
directly	O
used	O
on	O
the	O
application	O
server	O
without	B-Vulnerability
any	I-Vulnerability
data	I-Vulnerability
sanitization	I-Vulnerability
.	O
In	O
extreme	O
cases	O
","	O
the	O
attacker	O
can	O
change	B-TTPs
variables	I-TTPs
controlling	I-TTPs
the	I-TTPs
business	I-TTPs
logic	I-TTPs
of	I-TTPs
the	I-TTPs
application	I-TTPs
.	O
For	O
instance	O
","	O
in	O
languages	O
like	O
PHP	O
","	O
a	O
number	O
of	O
poorly	B-Vulnerability
set	I-Vulnerability
default	I-Vulnerability
configurations	I-Vulnerability
may	O
allow	O
the	O
user	O
to	O
override	O
variables	O
.	O
A	O
variable	O
consumed	O
by	O
the	O
application	O
server	O
is	O
exposed	O
to	O
the	O
client	O
.	O
A	O
variable	O
consumed	O
by	O
the	O
application	O
server	O
can	O
be	O
overwritten	O
by	O
the	O
user	O
.	O
The	O
application	O
server	O
trusts	O
user	O
supplied	O
data	O
to	O
compute	O
business	O
logic	O
.	O
The	O
application	O
server	O
does	B-Vulnerability
not	I-Vulnerability
perform	I-Vulnerability
proper	I-Vulnerability
input	I-Vulnerability
validation	I-Vulnerability
.	O
If	O
the	O
register_globals	O
option	O
is	O
enabled	O
","	O
PHP	O
will	O
create	O
global	O
variables	O
for	O
each	O
GET	B-Protocol
","	O
POST	B-Protocol
","	O
and	O
cookie	B-Protocol
variable	I-Protocol
included	O
in	O
the	O
HTTP	B-Protocol
request	I-Protocol
.	O
This	O
means	O
that	O
a	O
malicious	O
user	O
may	O
be	O
able	O
to	O
set	B-TTPs
variables	I-TTPs
unexpectedly	I-TTPs
.	O
For	O
instance	O
make	O
sure	O
that	O
the	O
server	O
setting	O
for	O
PHP	O
does	O
not	O
expose	O
global	O
variables	O
.	O
A	O
software	O
system	O
should	O
be	O
reluctant	O
to	O
trust	O
variables	O
that	O
have	O
been	O
initialized	O
outside	O
of	O
its	O
trust	O
boundary	O
.	O
Ensure	O
adequate	O
checking	O
is	O
performed	O
when	O
relying	O
on	O
input	O
from	O
outside	O
a	O
trust	O
boundary	O
.	O
Separate	O
the	O
presentation	O
layer	O
and	O
the	O
business	O
logic	O
layer	O
.	O
Variables	O
at	O
the	O
business	O
logic	O
layer	O
should	O
not	O
be	O
exposed	O
at	O
the	O
presentation	O
layer	O
.	O
This	O
is	O
to	O
prevent	O
computation	O
of	O
business	O
logic	O
from	O
user	O
controlled	O
input	O
data	O
.	O
Use	O
encapsulation	O
when	O
declaring	O
your	O
variables	O
.	O
This	O
is	O
to	O
lower	O
the	O
exposure	O
of	O
your	O
variables	O
.	O
Assume	O
all	O
input	O
is	O
malicious	O
.	O
Create	O
a	O
white	O
list	O
that	O
defines	O
all	O
valid	O
input	O
to	O
the	O
software	O
system	O
based	O
on	O
the	O
requirements	O
specifications	O
.	O
Input	O
that	O
does	O
not	O
match	O
against	O
the	O
white	O
list	O
should	O
be	O
rejected	O
by	O
the	O
program	O
.	O
