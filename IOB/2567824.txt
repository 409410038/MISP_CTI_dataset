Using	B-TTPs
Slashes	I-TTPs
in	I-TTPs
Alternate	I-TTPs
Encoding	I-TTPs
This	O
attack	O
targets	O
the	O
encoding	B-TTPs
of	B-TTPs
the	B-TTPs
Slash	B-TTPs
characters	B-TTPs
.	O
An	O
attacker	O
would	O
try	O
to	O
exploit	B-TTPs
common	I-TTPs
filtering	I-TTPs
problems	I-TTPs
related	I-TTPs
to	I-TTPs
the	I-TTPs
use	I-TTPs
of	I-TTPs
the	I-TTPs
slashes	I-TTPs
characters	I-TTPs
to	O
gain	B-TTPs
access	I-TTPs
to	O
resources	O
on	O
the	O
target	O
host	O
.	O
Directory-driven	O
systems	O
","	O
such	O
as	O
file	O
systems	O
and	O
databases	O
","	O
typically	O
use	O
the	O
slash	O
character	O
to	O
indicate	O
traversal	O
between	O
directories	O
or	O
other	O
container	O
components	O
.	O
For	O
murky	O
historical	O
reasons	O
","	O
PCs	O
(	O
and	O
","	O
as	O
a	O
result	O
","	O
Microsoft	B-Application
OSs	I-Application
)	O
choose	O
to	O
use	O
a	O
backslash	O
","	O
whereas	O
the	O
UNIX	B-Application
world	O
typically	O
makes	O
use	O
of	O
the	O
forward	O
slash	O
.	O
The	O
schizophrenic	O
result	O
is	O
that	O
many	O
MS-based	O
systems	O
are	O
required	O
to	O
understand	O
both	O
forms	O
of	O
the	O
slash	O
.	O
This	O
gives	O
the	O
attacker	O
many	O
opportunities	O
to	O
discover	B-TTPs
and	I-TTPs
abuse	I-TTPs
a	I-TTPs
number	I-TTPs
of	I-TTPs
common	I-TTPs
filtering	I-TTPs
problems	I-TTPs
.	O
The	O
goal	O
of	O
this	O
pattern	O
is	O
to	O
discover	B-TTPs
server	I-TTPs
software	I-TTPs
that	I-TTPs
only	I-TTPs
applies	I-TTPs
filters	I-TTPs
to	I-TTPs
one	I-TTPs
version	I-TTPs
","	O
but	O
not	O
the	O
other	O
.	O
The	O
application	O
server	O
accepts	O
paths	O
to	O
locate	O
resources	O
.	O
The	O
application	O
server	O
does	O
insufficient	B-Vulnerability
input	I-Vulnerability
data	I-Vulnerability
validation	I-Vulnerability
on	I-Vulnerability
the	I-Vulnerability
resource	I-Vulnerability
path	I-Vulnerability
requested	O
by	O
the	O
user	O
.	O
The	O
access	O
right	O
to	O
resources	O
are	O
not	O
set	O
properly	O
.	O
Any	O
security	O
checks	O
should	O
occur	O
after	O
the	O
data	O
has	O
been	O
decoded	O
and	O
validated	O
as	O
correct	O
data	O
format	O
.	O
Do	O
not	O
repeat	O
decoding	O
process	O
","	O
if	O
bad	O
character	O
are	O
left	O
after	O
decoding	O
process	O
","	O
treat	O
the	O
data	O
as	O
suspicious	O
","	O
and	O
fail	O
the	O
validation	O
process	O
.	O
Refer	O
to	O
the	O
RFCs	O
to	O
safely	O
decode	O
URL	O
.	O
When	O
client	O
input	O
is	O
required	O
from	O
web-based	O
forms	O
","	O
avoid	O
using	O
the	O
``	B-Protocol
GET	I-Protocol
''	I-Protocol
method	I-Protocol
to	O
submit	O
data	O
","	O
as	O
the	O
method	O
causes	O
the	O
form	O
data	O
to	O
be	O
appended	O
to	O
the	O
URL	O
and	O
is	O
easily	O
manipulated	O
.	O
Instead	O
","	O
use	O
the	O
``	O
POST	B-Protocol
method	I-Protocol
whenever	O
possible	O
.	O
There	O
are	O
tools	O
to	O
scan	O
HTTP	B-Protocol
requests	I-Protocol
to	O
the	O
server	O
for	O
valid	O
URL	O
such	O
as	O
URLScan	B-Application
from	I-Application
Microsoft	I-Application
(	O
http	O
:	O
//www.microsoft.com/technet/security/tools/urlscan.mspx	O
)	O
Be	O
aware	O
of	O
the	O
threat	O
of	O
alternative	O
method	
of	O
data	B-TTPs
encoding	I-TTPs
and	O
obfuscation	B-TTPs
technique	O
such	O
as	O
IP	B-TTPs
address	I-TTPs
encoding	I-TTPs
.	O
(	O
See	O
related	O
guideline	O
section	O
)	O
Test	O
your	O
path	O
decoding	O
process	O
against	O
malicious	O
input	O
.	O
In	O
the	O
case	O
of	O
path	O
traversals	O
","	O
use	O
the	O
principle	O
of	O
least	O
privilege	O
when	O
determining	O
access	O
rights	O
to	O
file	O
systems	O
.	O
Do	O
not	O
allow	O
users	O
to	O
access	O
directories/files	O
that	O
they	O
should	O
not	O
access	O
.	O
Assume	O
all	O
input	O
is	O
malicious	O
.	O
Create	O
a	O
white	O
list	O
that	O
defines	O
all	O
valid	O
input	O
to	O
the	O
application	O
based	O
on	O
the	O
requirements	O
specifications	O
.	O
Input	O
that	O
does	O
not	O
match	O
against	O
the	O
white	O
list	O
should	O
not	O
be	O
permitted	O
to	O
enter	O
into	O
the	O
system	O
.	O
