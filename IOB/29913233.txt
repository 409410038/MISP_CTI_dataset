An
attacker
supplies
the
target
software
with
input
data
that
contains
sequences
of
special
characters
designed
to
bypass
input
validation
logic
.
This
exploit
relies
on
the
target
making
multiples
passes
over
the
input
data
and
processing
a
``
layer
''
of
special
characters
with
each
pass
.
In
this
manner
,
the
attacker
can
disguise
input
that
would
otherwise
be
rejected
as
invalid
by
concealing
it
with
layers
of
special/escape
characters
that
are
stripped
off
by
subsequent
processing
steps
.
The
goal
is
to
first
discover
cases
where
the
input
validation
layer
executes
before
one
or
more
parsing
layers
.
That
is
,
user
input
may
go
through
the
following
logic
in
an
application
:
<
parser1
>
--
>
<
input
validator
>
--
>
<
parser2
>
.
In
such
cases
,
the
attacker
will
need
to
provide
input
that
will
pass
through
the
input
validator
,
but
after
passing
through
parser2
,
will
be
converted
into
something
that
the
input
validator
was
supposed
to
stop
.
