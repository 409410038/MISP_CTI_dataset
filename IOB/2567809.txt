Command	B-TTPs
Line	I-TTPs
Execution	I-TTPs
through	I-TTPs
SQL	I-TTPs
Injection	I-TTPs
.	O
An	O
attacker	O
uses	O
standard	O
SQL	B-TTPs
injection	I-TTPs
methods	I-TTPs
to	O
inject	B-TTPs
data	I-TTPs
into	I-TTPs
the	I-TTPs
command	I-TTPs
line	I-TTPs
for	I-TTPs
execution	I-TTPs
.	O
This	O
could	O
be	O
done	O
directly	O
through	O
misuse	O
of	O
directives	O
such	O
as	O
MSSQL_xp_cmdshell	B-Application
or	O
indirectly	O
through	O
injection	B-TTPs
of	I-TTPs
data	I-TTPs
into	I-TTPs
the	I-TTPs
database	I-TTPs
that	O
would	O
be	O
interpreted	O
as	O
shell	
commands	O
.	O
Sometime	O
later	O
,	O
an	O
unscrupulous	O
backend	O
application	O
(	O
or	O
could	O
be	O
part	O
of	O
the	O
functionality	O
of	O
the	O
same	O
application	O
)	O
fetches	O
the	O
injected	B-TTPs
data	I-TTPs
stored	O
in	O
the	O
database	O
and	O
uses	O
this	O
data	O
as	O
command	O
line	O
arguments	O
without	O
performing	O
proper	O
validation	O
.	O
The	O
malicious	O
data	O
escapes	
that	O
data	O
plane	
by	O
spawning	
new	O
commands	O
to	O
be	O
executed	O
on	O
the	O
host	O
.	O
The	O
application	O
does	O
not	O
properly	
validate	
data	O
before	O
storing	O
in	O
the	O
database	O
Backend	
application	O
implicitly	
trusts	
the	O
data	O
stored	O
in	O
the	O
database	O
Malicious	O
data	O
is	O
used	O
on	O
the	O
backend	
as	O
a	O
command	O
line	O
argument	
.	O
Disable	O
MSSQL	
xp_cmdshell	
directive	
on	O
the	O
database	O
Properly	
validate	
the	O
data	O
(	O
syntactically	
and	O
semantically	
)	O
before	O
writing	
it	O
to	O
the	O
database	O
.	O
Do	
not	O
implicitly	
trust	
the	O
data	O
stored	O
in	O
the	O
database	O
.	O
Re-validate	
it	O
prior	O
to	O
usage	
to	O
make	O
sure	
that	O
it	O
is	O
safe	
to	O
use	O
in	O
a	O
given	O
context	
(	O
e.g	
.	O
as	O
a	O
command	O
line	O
argument	
)	O
.	O