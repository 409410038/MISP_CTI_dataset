Exploiting	B-TTPs
Multiple	I-TTPs
Input	I-TTPs
Interpretation	I-TTPs
Layers	I-TTPs
.	O
An	O
attacker	O
supplies	B-TTPs
the	I-TTPs
target	I-TTPs
software	I-TTPs
with	I-TTPs
input	I-TTPs
data	I-TTPs
that	I-TTPs
contains	I-TTPs
sequences	I-TTPs
of	I-TTPs
special	I-TTPs
characters	I-TTPs
designed	O
to	O
bypass	B-TTPs
input	I-TTPs
validation	I-TTPs
logic	I-TTPs
.	O
This	O
exploit	O
relies	O
on	O
the	O
target	B-Vulnerability
making	I-Vulnerability
multiples	I-Vulnerability
passes	I-Vulnerability
over	I-Vulnerability
the	I-Vulnerability
input	I-Vulnerability
data	I-Vulnerability
and	I-Vulnerability
processing	I-Vulnerability
a	I-Vulnerability
``	I-Vulnerability
layer	I-Vulnerability
''	I-Vulnerability
of	I-Vulnerability
special	I-Vulnerability
characters	I-Vulnerability
with	I-Vulnerability
each	I-Vulnerability
pass	I-Vulnerability
.	O
In	O
this	O
manner	O
,	O
the	O
attacker	O
can	O
disguise	B-TTPs
input	I-TTPs
that	O
would	O
otherwise	O
be	O
rejected	O
as	O
invalid	O
by	O
concealing	B-TTPs
it	I-TTPs
with	I-TTPs
layers	I-TTPs
of	I-TTPs
special/escape	I-TTPs
characters	I-TTPs
that	I-TTPs
are	I-TTPs
stripped	I-TTPs
off	I-TTPs
by	I-TTPs
subsequent	I-TTPs
processing	I-TTPs
steps	I-TTPs
.	O
The	O
goal	O
is	O
to	O
first	O
discover	B-TTPs
cases	I-TTPs
where	I-TTPs
the	I-TTPs
input	I-TTPs
validation	I-TTPs
layer	I-TTPs
executes	I-TTPs
before	I-TTPs
one	I-TTPs
or	I-TTPs
more	I-TTPs
parsing	I-TTPs
layers	I-TTPs
.	O
That	O
is	O
,	O
user	O
input	O
may	O
go	O
through	O
the	O
following	O
logic	O
in	O
an	O
application	O
:	O
<	O
parser1	O
>	O
--	O
>	O
<	O
input	O
validator	O
>	O
--	O
>	O
<	O
parser2	O
>	O
.	O
In	O
such	O
cases	O
,	O
the	O
attacker	O
will	O
need	O
to	O
provide	O
input	O
that	O
will	O
pass	O
through	O
the	O
input	O
validator	O
,	O
but	O
after	O
passing	O
through	O
parser2	O
,	O
will	O
be	O
converted	O
into	O
something	O
that	O
the	O
input	O
validator	O
was	O
supposed	O
to	O
stop	O
.	O
User	O
input	O
is	O
used	O
to	O
construct	O
a	O
command	O
to	O
be	O
executed	O
on	O
the	O
target	O
system	O
or	O
as	O
part	O
of	O
the	O
file	O
name	O
.	O
Multiple	O
parser	O
passes	O
are	O
performed	O
on	O
the	O
data	O
supplied	O
by	O
the	O
user	O
.	O
An	O
iterative	O
approach	O
to	O
input	O
validation	O
may	O
be	O
required	O
to	O
ensure	O
that	O
no	O
dangerous	O
characters	O
are	O
present	O
.	O
It	O
may	O
be	O
necessary	O
to	O
implement	O
redundant	O
checking	O
across	O
different	O
input	O
validation	O
layers	O
.	O
Ensure	O
that	O
invalid	O
data	O
is	O
rejected	O
as	O
soon	O
as	O
possible	O
and	O
do	O
not	O
continue	O
to	O
work	O
with	O
it	O
.	O
Make	O
sure	O
to	O
perform	O
input	O
validation	O
on	O
canonicalized	O
data	O
(	O
i.e	O
.	O
data	O
that	O
is	O
data	O
in	O
its	O
most	O
standard	O
form	O
)	O
.	O
This	O
will	O
help	O
avoid	O
tricky	O
encodings	O
getting	O
past	O
the	O
filters	O
.	O
Assume	O
all	O
input	O
is	O
malicious	O
.	O
Create	O
a	O
white	O
list	O
that	O
defines	O
all	O
valid	O
input	O
to	O
the	O
software	O
system	O
based	O
on	O
the	O
requirements	O
specifications	O
.	O
Input	O
that	O
does	O
not	O
match	O
against	O
the	O
white	O
list	O
should	O
not	O
be	O
permitted	O
to	O
enter	O
into	O
the	O
system	O
.	O