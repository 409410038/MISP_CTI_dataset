Buffer	B-TTPs
Overflow	I-TTPs
via	I-TTPs
Symbolic	I-TTPs
Links	I-TTPs
.	O
This	O
type	O
of	O
attack	O
leverages	B-TTPs
the	I-TTPs
use	I-TTPs
of	I-TTPs
symbolic	I-TTPs
links	I-TTPs
to	I-TTPs
cause	I-TTPs
buffer	I-TTPs
overflows	I-TTPs
.	O
An	O
attacker	O
can	O
try	O
to	O
create	B-TTPs
or	I-TTPs
manipulate	I-TTPs
a	I-TTPs
symbolic	I-TTPs
link	I-TTPs
file	I-TTPs
such	I-TTPs
that	I-TTPs
its	I-TTPs
contents	I-TTPs
result	I-TTPs
in	I-TTPs
out	I-TTPs
of	I-TTPs
bounds	I-TTPs
data	I-TTPs
.	O
When	O
the	O
target	O
software	O
processes	O
the	O
symbolic	O
link	O
file	O
,	O
it	O
could	O
potentially	O
overflow	O
internal	O
buffers	O
with	O
insufficient	B-Vulnerability
bounds	I-Vulnerability
checking	I-Vulnerability
.	O
The	O
attacker	O
can	O
create	B-TTPs
symbolic	I-TTPs
link	I-TTPs
on	I-TTPs
the	I-TTPs
target	I-TTPs
host	I-TTPs
.	O
The	O
target	O
host	O
does	B-Vulnerability
not	I-Vulnerability
perform	I-Vulnerability
correct	I-Vulnerability
boundary	I-Vulnerability
checking	I-Vulnerability
while	I-Vulnerability
consuming	I-Vulnerability
data	I-Vulnerability
from	I-Vulnerability
a	I-Vulnerability
resources	I-Vulnerability
.	O
Pay	O
attention	O
to	O
the	O
fact	O
that	O
the	O
resource	O
you	O
read	O
from	O
can	O
be	O
a	O
replaced	O
by	O
a	O
Symbolic	O
link	O
.	O
You	O
can	O
do	O
a	O
Symlink	O
check	O
before	O
reading	O
the	O
file	O
and	O
decide	O
that	O
this	O
is	O
not	O
a	O
legitimate	O
way	O
of	O
accessing	O
the	O
resource	O
.	O
Because	O
Symlink	O
can	O
be	O
modified	O
by	O
an	O
attacker	O
,	O
make	O
sure	O
that	O
the	O
ones	O
you	O
read	O
are	O
located	O
in	O
protected	O
directories	O
.	O
Pay	O
attention	O
to	O
the	O
resource	O
pointed	O
to	O
by	O
your	O
symlink	O
links	O
(	O
See	O
attack	O
pattern	O
named	O
``	O
Forced	B-TTPs
Symlink	I-TTPs
race	I-TTPs
''	O
)	O
,	O
they	O
can	O
be	O
replaced	B-TTPs
by	I-TTPs
malicious	I-TTPs
resources	I-TTPs
.	O
Always	O
check	O
the	O
size	O
of	O
the	O
input	O
data	O
before	O
copying	O
to	O
a	O
buffer	O
.	O
Use	O
a	O
language	O
or	O
compiler	O
that	O
performs	O
automatic	O
bounds	O
checking	O
.	O
Use	O
an	O
abstraction	O
library	O
to	O
abstract	O
away	O
risky	O
APIs	O
.	O
Not	O
a	O
complete	O
solution	O
.	O
Compiler-based	O
canary	O
mechanisms	O
such	O
as	O
StackGuard	B-Application
,	O
ProPolice	B-Application
and	O
the	O
Microsoft	B-Application
Visual	I-Application
Studio	I-Application
/GS	I-Application
flag	I-Application
.	O
Unless	O
this	O
provides	O
automatic	O
bounds	O
checking	O
,	O
it	O
is	O
not	O
a	O
complete	O
solution	O
.	O
Use	O
OS-level	O
preventative	O
functionality	O
.	O
Not	O
a	O
complete	O
solution	O
.	O