An	O
adversary	O
manipulates	B-TTPs
an	I-TTPs
application	I-TTPs
's	I-TTPs
interaction	I-TTPs
with	I-TTPs
a	I-TTPs
buffer	I-TTPs
in	O
an	O
attempt	O
to	O
read	B-TTPs
or	I-TTPs
modify	I-TTPs
data	I-TTPs
they	I-TTPs
should	I-TTPs
n't	I-TTPs
have	I-TTPs
access	I-TTPs
to	I-TTPs
.	O
Buffer	B-TTPs
attacks	I-TTPs
are	O
distinguished	O
in	O
that	O
it	O
is	O
the	O
buffer	O
space	O
itself	O
that	O
is	O
the	O
target	O
of	O
the	O
attack	O
rather	O
than	O
any	O
code	O
responsible	O
for	O
interpreting	O
the	O
content	O
of	O
the	O
buffer	O
.	O
In	O
virtually	O
all	O
buffer	B-TTPs
attacks	I-TTPs
the	O
content	O
that	O
is	O
placed	O
in	O
the	O
buffer	O
is	O
immaterial	O
.	O
Instead	O
","	O
most	O
buffer	B-TTPs
attacks	I-TTPs
involve	O
retrieving	B-TTPs
or	I-TTPs
providing	I-TTPs
more	I-TTPs
input	I-TTPs
than	I-TTPs
can	I-TTPs
be	I-TTPs
stored	I-TTPs
in	I-TTPs
the	I-TTPs
allocated	I-TTPs
buffer	I-TTPs
","	O
resulting	O
in	O
the	O
reading	B-TTPs
or	I-TTPs
overwriting	I-TTPs
of	I-TTPs
other	I-TTPs
unintended	I-TTPs
program	I-TTPs
memory	I-TTPs
.	O
The	O
adversary	O
must	O
identify	B-TTPs
a	I-TTPs
programmatic	I-TTPs
means	I-TTPs
for	I-TTPs
interacting	I-TTPs
with	I-TTPs
a	I-TTPs
buffer	I-TTPs
","	O
such	O
as	O
vulnerable	O
C	O
code	O
","	O
and	O
be	B-TTPs
able	I-TTPs
to	I-TTPs
provide	I-TTPs
input	I-TTPs
to	I-TTPs
this	I-TTPs
interaction	I-TTPs
.	O
To	O
help	O
protect	O
an	O
application	O
from	O
buffer	B-TTPs
manipulation	I-TTPs
attacks	I-TTPs
","	O
a	O
number	O
of	O
potential	O
mitigations	O
can	O
be	O
leveraged	O
.	O
Before	O
starting	O
the	O
development	O
of	O
the	O
application	O
","	O
consider	O
using	O
a	O
code	O
language	O
(	O
e.g.	O
","	O
Java	O
)	O
or	O
compiler	O
that	O
limits	O
the	O
ability	O
of	O
developers	O
to	O
act	O
beyond	O
the	O
bounds	O
of	O
a	O
buffer	O
.	O
If	O
the	O
chosen	O
language	O
is	O
susceptible	O
to	O
buffer	B-Vulnerability
related	I-Vulnerability
issues	I-Vulnerability
(	O
e.g.	O
","	O
C	O
)	O
then	O
consider	O
using	O
secure	O
functions	O
instead	O
of	O
those	O
vulnerable	O
to	O
buffer	B-Vulnerability
manipulations	I-Vulnerability
.	O
If	O
a	O
potentially	O
dangerous	O
function	O
must	O
be	O
used	O
","	O
make	O
sure	O
that	O
proper	O
boundary	O
checking	O
is	O
performed	O
.	O
Additionally	O
","	O
there	O
are	O
often	O
a	O
number	O
of	O
compiler-based	O
mechanisms	O
(	O
e.g.	O
","	O
StackGuard	O
","	O
ProPolice	O
and	O
the	O
Microsoft	O
Visual	O
Studio	O
/GS	O
flag	O
)	O
that	O
can	O
help	O
identify	O
and	O
protect	O
against	O
potential	O
buffer	B-Vulnerability
issues	I-Vulnerability
.	O
Finally	O
","	O
there	O
may	O
be	O
operating	O
system	O
level	O
preventative	O
functionality	O
that	O
can	O
be	O
applied	O
.	O
